// Mocks generated by Mockito 5.4.0 from annotations
// in demo_flutter_app/test/model/api/food_api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:demo_flutter_app/model/api/services_api.dart' as _i3;
import 'package:demo_flutter_app/model/food_models.dart' as _i5;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MyService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyService extends _i1.Mock implements _i3.MyService {
  MockMyService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  String get svg => (super.noSuchMethod(
        Invocation.getter(#svg),
        returnValue: '',
      ) as String);
  @override
  set svg(String? _svg) => super.noSuchMethod(
        Invocation.setter(
          #svg,
          _svg,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<dynamic> createUser({
    required String? name,
    required String? phone,
    required String? status,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [],
          {
            #name: name,
            #phone: phone,
            #status: status,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> updateUser({
    required String? name,
    required String? phone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [],
          {
            #name: name,
            #phone: phone,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> secondUpdateUser({
    required String? title,
    required String? body,
    required int? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #secondUpdateUser,
          [],
          {
            #title: title,
            #body: body,
            #userId: userId,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> fetchImage() => (super.noSuchMethod(
        Invocation.method(
          #fetchImage,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> fetchImageByName(String? name) => (super.noSuchMethod(
        Invocation.method(
          #fetchImageByName,
          [name],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<List<_i5.FoodModel>> fetchFood() => (super.noSuchMethod(
        Invocation.method(
          #fetchFood,
          [],
        ),
        returnValue: _i4.Future<List<_i5.FoodModel>>.value(<_i5.FoodModel>[]),
      ) as _i4.Future<List<_i5.FoodModel>>);
}
